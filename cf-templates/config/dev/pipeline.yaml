template:
  path: 'pipeline.yaml'
  type: 'file'

parameters:
  VpcID: !stack_output_external cdl-uc3-dev-vpc-stack::vpc
  # TODO: figure out why Subnet outputs are incorrect in CF. Pref would be to call
  #       !stack_output_external like in application.yaml
  #
  # Need to use private subnets here (may need to create a NAT gateway). Found this
  # buried in the docs:
  #   "When you set up your AWS CodeBuild projects to access your VPC, choose private subnets only."
  Subnets:
    # - !stack_output_external cdl-uc3-dev-defaultsubnet-stack::defaultsubnet2a
    # - !stack_output_external cdl-uc3-dev-defaultsubnet-stack::defaultsubnet2b
    # - !stack_output_external cdl-uc3-dev-defaultsubnet-stack::defaultsubnet2c
    - 'subnet-0b6ce38d6c451c40c'
    - 'subnet-007d03c7b2d5867c9'
    - 'subnet-01df5798fad9d5a9d'

  Environment: !stack_attr sceptre_user_data.env
  AppName: !stack_attr sceptre_user_data.application
  DomainName: !stack_output dev/frontend.yaml::DomainName

  CodeStarConnectionArn: !ssm_parameter /uc3/dmp/roadmap/dev/codestar_connection
  CodeStarConnectionCfnArn: !ssm_parameter /uc3/dmp/roadmap/dev/codestar_connection_cfn

  ECSClusterName: !stack_output dev/application.yaml::ECSFargateClusterId
  ECSServiceName: !stack_output dev/application.yaml::ECSServiceName

  ECRRepositoryURI: !stack_output dev/data.yaml::ECRRepositoryURI
  ECRRepositoryName: !stack_output dev/data.yaml::ECRRepositoryName

  RailsEnv: !stack_attr sceptre_user_data.rails_env
  RailsLogLevel: !stack_attr sceptre_user_data.rails_log_level
  ALBDNSName: !stack_output dev/frontend.yaml::ALBDNSName
  DBAddress: !stack_output dev/data.yaml::DBAddress
  DBPort: !stack_output dev/data.yaml::DBPort
  DBName: !stack_output dev/data.yaml::DBName
  DBUsername: !ssm_parameter /uc3/dmp/roadmap/dev/db_dba_username
  DBPassword: !ssm_parameter /uc3/dmp/roadmap/dev/db_dba_password
  DBSnapshot: 'arn:aws:rds:us-west-2:671846987296:snapshot:uc3-dmp-roadmap-initial'
