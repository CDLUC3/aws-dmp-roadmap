template:
  path: 'data.yaml'
  type: 'file'

parameters:
  VpcID: !stack_output_external cdl-uc3-dev-vpc-stack::vpc
  Subnets:
    # - !stack_output_external cdl-uc3-dev-privatesubnet-stack::privatesubnet2a
    # - !stack_output_external cdl-uc3-dev-privatesubnet-stack::privatesubnet2b
    # - !stack_output_external cdl-uc3-dev-privatesubnet-stack::privatesubnet2c
    - 'subnet-0b6ce38d6c451c40c'
    - 'subnet-007d03c7b2d5867c9'
    - 'subnet-01df5798fad9d5a9d'

  OldSubnets:
    - !stack_output_external cdl-uc3-dev-defaultsubnet-stack::defaultsubnet2a
    - !stack_output_external cdl-uc3-dev-defaultsubnet-stack::defaultsubnet2b
    - !stack_output_external cdl-uc3-dev-defaultsubnet-stack::defaultsubnet2c

  Environment: !stack_attr sceptre_user_data.env
  AppName: !stack_attr sceptre_user_data.application

  ECRLifecyclePolicyTagPrefix: 'latest'

  # If you have an existing RDS snapshot of your DB, you can include it here and CF will
  # restore that snapshot. If not, just leave this commented out and Docker will initialize the DB
  # DBSnapshot: 'arn:aws:rds:us-west-2:671846987296:snapshot:uc3-dmp-roadmap-initial'

  DBInstanceType: 'db.t3.micro'
  # Valid options are based on the DB engine.
  #   See: at: https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-rds-database-instance.html#cfn-rds-dbinstance-allocatedstorage
  DBSizeGB: '20'
  DBName: 'roadmap'
  DBEngine: 'MySQL'
