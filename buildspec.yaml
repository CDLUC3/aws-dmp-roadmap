# Build specifications for AWS CodeBuild
#   See: https://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html

# Each input artifact is extracted to its own directory by CodePipeline, the locations of which
# are stored in environment variables. The directory for the primary source artifact (this repo)
# is made available with $CODEBUILD_SRC_DIR. The directory for the DMPRoadmap push artifacts is
# made available with $CODEBUILD_SRC_DIR_uc3-dmp-roadmap-commit.

version: 0.2

proxy:
  logs: yes

phases:
  pre_build:
    commands:
      - CFN_DIR=${CODEBUILD_SRC_DIR}
      - CODE_DIR=${CODEBUILD_SRC_DIR_DMPRoadmapPush}

      # Set some ENV variables here because CF only allows a limit of 1000 characters in the
      # EnvironmentVariable config for the Pipeline action :(
      - export RAILS_ENV=ci
      - export RAILS_LOG_TO_STDOUT=true
      - export DRAGONFLY_AWS=false

      - echo "PWD -- $(pwd)"
      - echo $(ls -la)
      - echo "dmp-roadmap-cfn directory -- $CFN_DIR"
      - echo $(cd $CFN_DIR && ls -la)
      - echo "dmproadmap code dir -- ${CODE_DIR}"
      - echo $(cd $CODE_DIR && ls -la)
      - echo "GIT COMMIT - $(git log -n 1 --pretty=format:%H)"

      # Build a symlink to the code directory
      - echo Adding symbolic link to the DMPRoadmap codebase to the CFN Docker dir
      - echo "PWD -- $(pwd)"
      - cd $CFN_DIR
      - if [ -L ./roadmap ]; then rm roadmap; fi
      - ln -s $CODE_DIR ./roadmap

      # Fetch the ECR repository name
      - echo Fetching ECR URI
      - echo "PWD -- $(pwd)"
      #- echo $ECR_REPOSITORY_URI >> .ecr
      #- SHORT_ECR_URI=$(awk '{gsub("$ECR_REPOSITORY_NAME", "");print}' .repo)
      #- rm .ecr
      #- echo ECR repo - $SHORT_ECR_URI

      - SHORT_ECR_URI=671846987296.dkr.ecr.us-west-2.amazonaws.com

      # Set the repository URI to your ECR image and add an image tag with the first seven characters of the Git commit ID of the source.
      - echo Logging in to Amazon ECR...
      - echo "PWD -- $(pwd)"
      # - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $SHORT_ECR_URI
      # - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      # - IMAGE_TAG=${COMMIT_HASH:=latest}

      - echo printenv
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - echo "PWD -- $(pwd)"
      # - cd $CFN_DIR
      # - docker build -t $FULL_ECR_URI:latest .
      # - docker tag $FULL_ECR_URI:latest $FULL_ECR_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - echo "PWD -- $(pwd)"
      # - cd $CFN_DIR
      # - docker push $FULL_ECR_URI:latest
      # - docker push $FULL_ECR_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"uc3-dmp-roadmap","imageUri":"%s"}]' $ECR_REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
artifacts:
    files: imagedefinitions.json
